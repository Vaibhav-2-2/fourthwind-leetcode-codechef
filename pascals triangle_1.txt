Given an integer numRows, return the first numRows of Pascal's triangle.

In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:


 

Example 1:

Input: numRows = 5
Output: [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]
Example 2:

Input: numRows = 1
Output: [[1]]
 




solution:

class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> a = new ArrayList<>();
        if(numRows<1){
            return a;
            }
        List<Integer> pre = new ArrayList<>();
        pre.add(1);
        a.add(pre);
        for(int i = 1; i<numRows;i++){
           List<Integer> s = new ArrayList<>();
            s.add(1);
            for(int j =1;j<i;j++){
          int val = pre.get(j)+pre.get(j-1);
                s.add(val);
    }
            s.add(1);
            a.add(s);
            pre = s;
}
        return a;
        }}
