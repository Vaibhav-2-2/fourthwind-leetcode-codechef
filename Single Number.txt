Given a non-empty array of integers nums, every element appears twice except for one. Find that single one.

You must implement a solution with a linear runtime complexity and use only constant extra space.

 

Example 1:

Input: nums = [2,2,1]
Output: 1
Example 2:

Input: nums = [4,1,2,1,2]
Output: 4
Example 3:

Input: nums = [1]
Output: 1



solution:

class Solution {
    public int singleNumber(int[] nums) {
        int e = 0;
        Arrays.sort(nums);
        int i =0;
        while(i<nums.length){
            if(i == nums.length-1){
                return nums[i];
            }
            if(nums[i]==nums[i+1]){
                i+=2;
            }
            else{
                e = nums[i];
                i++;
            }
        }
        return e;
    }
}