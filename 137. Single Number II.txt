Given an integer array nums where every element appears three times except for one, which appears exactly once. Find the single element and return it.

You must implement a solution with a linear runtime complexity and use only constant extra space.

 

Example 1:

Input: nums = [2,2,3,2]
Output: 3
Example 2:

Input: nums = [0,1,0,1,0,1,99]
Output: 99


solution:

class Solution {
    public int singleNumber(int[] nums) {
        int e = 0;
        Arrays.sort(nums);
        int i =0;
        while(i<nums.length){
            if(i == nums.length-1){
                return nums[i];
            }
            if(nums[i]==nums[i+1]){
                i+=3;
            }
            else{
                e = nums[i];
                i++;
            }
        }
        return e;
    }
}