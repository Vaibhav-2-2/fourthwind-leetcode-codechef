Chef and Dolls
 

Chef is fan of pairs and he likes all things that come in pairs. He even has a doll collection in which the dolls come in pairs. One day while going through his collection he found that there are odd number of dolls. Someone had stolen a doll!!!

Help chef find which type of doll is missing..

Input
The first line contains an integer T, the number of test cases.
The first line of each test case contains an integer N, the number of dolls.
The next N lines are the types of dolls that are left.

Output
For each test case, display the type of doll that doesn't have a pair, in a new line.

Constraints
1<=T<=10
1<=N<=100000 (10^5)
0<=type<=100000

Sample 1:
Input
Output
1
3
1 
2
1
2
Explanation:
For this case, we have three dolls [1, 2, 1]. So we have two dolls of type 1, but only one doll of type 2. Thus one doll of type 2 is missing.

Sample 2:
Input
Output
1
5
1
1
2
2
3
3
Explanation:
For this case [1, 1, 2, 2, 3], we have two dolls of type 1 and 2, but only one doll of type 3. Thus one doll of type 3 is missing.





solution:

import java.util.*;
import java.lang.*;
import java.io.*;

class Codechef

{
    public static int single(int[] v){
        Arrays.sort(v);
        int ans =0;
        for(int i =0;i<v.length;i++){
            ans = ans^v[i];
        }
        return ans;
    }
    public static void main (String[] args) throws java.lang.Exception
    {
        // Create a Scanner object to read input
        Scanner scanner = new Scanner(System.in);

        // Prompt the user to enter the number of test cases

        int numOfTestCases = scanner.nextInt();
        scanner.nextLine(); // Consume newline

        // Process each test case
        for (int t = 0; t < numOfTestCases; t++) {


            // Prompt the user to enter the size of the array

            int size = scanner.nextInt();
            // Consume newline

            // Create an array to hold the input values
            int[] values = new int[size];

            // Read values into the array
            for (int i = 0; i < size; i++) {

                values[i] = scanner.nextInt();
            }

            // Process the array
            System.out.println(single(values));
        }
    }
}

